Vector4 Testing

***** Vector4(void) *****
0.000, 0.000, 0.000, 0.000

***** Vector4(const Vector4& rhs) *****
1.662, 1.881, 1.268, 1.143
1.662, 1.881, 1.268, 1.143

***** Vector4(f32 xx, f32 yy, f32 zz, f32 ww) *****
1.000, 2.000, 3.000, 0.000
1.000, 2.000, 3.000, 4.000

***** operator=(const Vector4& rhs) *****
1.828, 1.853, 1.506, 1.886
1.828, 1.853, 1.506, 1.886

***** operator-(void) *****
-1.828, -1.853, -1.506, -1.886

***** operator+(const Vector4& rhs) *****
2.828, 3.853, 4.506, 5.886

***** operator-(const Vector4& rhs) *****
0.828, -0.147, -1.494, -2.114

***** operator*(const f32 rhs) *****
5.485, 5.558, 4.519, 5.658

***** operator/(const f32 rhs) *****
0.914, 0.926, 0.753, 0.943

***** operator+=(const Vector4& rhs) *****
1.828, 1.853, 1.506, 1.886
2.828, 3.853, 4.506, 5.886

***** operator-=(const Vector4& rhs) *****
2.828, 3.853, 4.506, 5.886
1.828, 1.853, 1.506, 1.886

***** operator*=(const f32 rhs) *****
1.828, 1.853, 1.506, 1.886
5.485, 5.558, 4.519, 5.658

***** operator/=(const f32 rhs) *****
5.485, 5.558, 4.519, 5.658
2.743, 2.779, 2.260, 2.829

***** operator==(const Vector4& rhs) *****
1.828, 1.853, 1.506, 1.886
1.828, 1.853, 1.506, 1.886

Should be Equal: Success

Assigning vec2 to vec1
1.828, 1.853, 1.506, 1.886
1.828, 1.853, 1.506, 1.886

Modifying X Component from 1.828491 to 1.828441

1.828, 1.853, 1.506, 1.886
1.828, 1.853, 1.506, 1.886

Should be Equal: Success

***** operator!=(const Vector4& rhs) *****
1.000, 2.000, 3.000, 0.000
1.828, 1.853, 1.506, 1.886

Should not be Equal: Success

Assigning vec2 to vec1
1.828, 1.853, 1.506, 1.886
1.828, 1.853, 1.506, 1.886

Modifying X Component from 1.828491 to 1.829491

1.829, 1.853, 1.506, 1.886
1.828, 1.853, 1.506, 1.886

Should not be Equal: Success

***** Dot(const Vector4& rhs) *****

vec1.Dot(vec2) returns 12.029
vec2.Dot(vec1) returns 12.029
vec3.Dot(vec2) returns 27.780
vec4.Dot(vec1) returns 21.374

***** Cross(const Vector4& rhs) *****

vec1.Cross(vec2)
-1.349, -2.171, 3.037, 0.000

vec2.Cross(vec1)
1.349, 2.171, -3.037, 0.000

vec3.Cross(vec4)
-2.044, 0.842, 1.349, 0.000

vec2.Cross(vec3)
0.314, 3.610, -3.695, 0.000

***** Length(void) *****

vec1.Length() returns 3.237
vec2.Length() returns 5.263
vec3.Length() returns 7.156
vec4.Length() returns 9.368

***** LengthSq(void) *****

vec1.LengthSq() returns 10.475
vec2.LengthSq() returns 27.703
vec3.LengthSq() returns 51.208
vec4.LengthSq() returns 87.762

***** Normalize(void) *****

Normalizing Zero Vector
0.000, 0.000, 0.000, 0.000
0.000, 0.000, 0.000, 0.000

Filling Random Values
1.499, 1.975, 4.329, 4.649

vec5.Length() returns 6.819
Normalizing Non-Zero Vector
vec5.Length() returns 1.000

***** Zero(void) *****

0.220, 0.290, 0.635, 0.682
0.000, 0.000, 0.000, 0.000
Point4 Testing

***** Point4(void) *****
0.000, 0.000, 0.000, 1.000

***** Point4(const Point4& rhs) *****
1.670, 1.649, 1.204, 1.185
1.670, 1.649, 1.204, 1.185

***** Point4(f32 xx, f32 yy, f32 zz, f32 ww) *****
1.000, 2.000, 3.000, 1.000
1.000, 2.000, 3.000, 4.000

***** operator=(const Point4& rhs) *****
1.936, 1.335, 1.797, 1.352
1.936, 1.335, 1.797, 1.352

***** operator-(void) *****
-1.936, -1.335, -1.797, -1.352

***** operator-(const Point4& rhs) *****
-2.972, -1.216, 0.733, 0.259

***** operator+(const Vector4& rhs) *****
1.936, 1.335, 1.797, 1.352
1.567, 3.245, 4.861, 2.542
3.503, 4.581, 6.658, 3.894

***** operator-(const Vector4& rhs) *****
1.936, 1.335, 1.797, 1.352
1.567, 3.245, 4.861, 2.542
0.369, -1.910, -3.065, -1.190

***** operator+=(const Vector4& rhs) *****
1.936, 1.335, 1.797, 1.352
1.567, 3.245, 4.861, 2.542
3.503, 4.581, 6.658, 3.894

***** operator-=(const Vector4& rhs) *****
3.503, 4.581, 6.658, 3.894
1.567, 3.245, 4.861, 2.542
1.936, 1.335, 1.797, 1.352

Should be Equal: Success

Assigning pnt2 to pnt1
4.908, 2.552, 1.063, 1.093
4.908, 2.552, 1.063, 1.093

Modifying X Component from 4.907715 to 4.907665

4.908, 2.552, 1.063, 1.093
4.908, 2.552, 1.063, 1.093

Should be Equal: Success

***** operator!=(const Point4& rhs) *****
1.000, 2.000, 3.000, 1.000
4.908, 2.552, 1.063, 1.093

Should not be Equal: Success

Assigning pnt2 to pnt1
4.908, 2.552, 1.063, 1.093
4.908, 2.552, 1.063, 1.093

Modifying X Component from 4.907715 to 4.908715

4.909, 2.552, 1.063, 1.093
4.908, 2.552, 1.063, 1.093

Should not be Equal: Success

***** Zero(void) *****

1.622, 3.416, 4.081, 3.578
0.000, 0.000, 0.000, 1.000
Matrix4 Testing

***** Matrix4(void) *****
--------------------------
0.000 0.000 0.000 0.000
0.000 0.000 0.000 0.000
0.000 0.000 0.000 0.000
0.000 0.000 0.000 0.000
--------------------------

***** Matrix4(const Matrix4& rhs) *****
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------

***** Matrix4(f32 mm00, f32 mm01, ... ) *****
--------------------------
1.000 2.000 3.000 4.000
5.000 6.000 7.000 8.000
9.000 8.000 7.000 6.000
5.000 4.000 3.000 2.000
--------------------------

***** operator=(const Matrix4& rhs) *****
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------

***** operator*(const Vector4& rhs) *****
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------
0.000, 0.000, 0.000, 0.000
0.000, 0.000, 0.000, 0.000
1.000, 2.000, 3.000, 4.000
12.382, 14.565, 16.021, 14.986

***** operator*(const Point4& rhs) *****
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------
0.000, 0.000, 0.000, 1.000
1.102, 1.911, 1.466, 1.365
1.000, 2.000, 3.000, 4.000
12.382, 14.565, 16.021, 14.986

***** operator+(const Matrix4& rhs) *****
--------------------------
3.388 2.835 2.297 2.204
2.155 2.229 2.409 3.823
2.160 3.474 3.734 2.933
3.958 2.076 3.646 2.731
--------------------------

***** operator-(const Matrix4& rhs) *****
--------------------------
0.000 0.000 0.000 0.000
0.000 0.000 0.000 0.000
0.000 0.000 0.000 0.000
0.000 0.000 0.000 0.000
--------------------------

***** operator*(const Matrix4& rhs) *****
--------------------------
7.818 7.120 7.807 7.765
8.110 6.846 8.313 7.693
8.620 8.232 9.492 9.250
9.143 8.546 9.417 8.702
--------------------------

***** operator+=(const Matrix4& rhs) *****
--------------------------
3.388 2.835 2.297 2.204
2.155 2.229 2.409 3.823
2.160 3.474 3.734 2.933
3.958 2.076 3.646 2.731
--------------------------

***** operator-=(const Matrix4& rhs) *****
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------

***** operator*=(const Matrix4& rhs) *****
--------------------------
7.818 7.120 7.807 7.765
8.110 6.846 8.313 7.693
8.620 8.232 9.492 9.250
9.143 8.546 9.417 8.702
--------------------------

***** operator*(const f32 rhs) *****
--------------------------
23.455 21.361 23.420 23.294
24.329 20.537 24.940 23.080
25.859 24.697 28.477 27.750
27.428 25.639 28.250 26.107
--------------------------

***** operator/(const f32 rhs) *****
--------------------------
2.606 2.373 2.602 2.588
2.703 2.282 2.771 2.564
2.873 2.744 3.164 3.083
3.048 2.849 3.139 2.901
--------------------------

***** operator*=(const f32 rhs) *****
--------------------------
23.455 21.361 23.420 23.294
24.329 20.537 24.940 23.080
25.859 24.697 28.477 27.750
27.428 25.639 28.250 26.107
--------------------------

***** operator/=(const f32 rhs) *****
--------------------------
11.728 10.680 11.710 11.647
12.164 10.269 12.470 11.540
12.930 12.348 14.238 13.875
13.714 12.820 14.125 13.053
--------------------------

***** operator==(const Matrix4& rhs) *****
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------

Should be Equal: Success

Assigning mtx2 to mtx1
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------

Modifying X Component from 1.694092 to 1.694042

--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------

Should be Equal: Success

***** operator!=(const Matrix4& rhs) *****
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------

Should be Equal: Success

Assigning mtx2 to mtx1
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------

Modifying 1st Component from 1.694092 to 1.695092

--------------------------
1.695 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------
--------------------------
1.694 1.418 1.149 1.102
1.077 1.115 1.205 1.911
1.080 1.737 1.867 1.466
1.979 1.038 1.823 1.365
--------------------------

Should not be Equal: Success

***** Zero(void) *****
--------------------------
2.231 1.920 2.936 4.651
4.369 2.310 3.206 2.555
2.602 2.482 1.554 3.104
2.003 2.899 1.035 4.115
--------------------------
--------------------------
0.000 0.000 0.000 0.000
0.000 0.000 0.000 0.000
0.000 0.000 0.000 0.000
0.000 0.000 0.000 0.000
--------------------------

***** Identity(void) *****
--------------------------
2.537 4.183 1.265 2.879
3.085 4.772 2.458 3.006
2.202 2.425 1.496 1.873
2.257 1.885 4.578 3.618
--------------------------
--------------------------
1.000 0.000 0.000 0.000
0.000 1.000 0.000 0.000
0.000 0.000 1.000 0.000
0.000 0.000 0.000 1.000
--------------------------
